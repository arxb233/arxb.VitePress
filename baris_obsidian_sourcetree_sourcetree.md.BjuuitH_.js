import{_ as t,B as r,c as o,G as s,w as i,a4 as n,o as c,j as l}from"./chunks/framework.CyeRpf1z.js";const p="/sourcetree/Snipaste_2023-10-24_13-38-08.png",d="/sourcetree/Snipaste_2023-10-24_13-39-48.png",u="/sourcetree/Snipaste_2023-10-24_13-40-16.png",h="/sourcetree/Snipaste_2023-10-24_14-04-23.png",g="/sourcetree/Snipaste_2023-10-24_13-41-04.png",k=JSON.parse('{"title":"通过sourceTree和git进行项目托管","description":"","frontmatter":{"title":"通过sourceTree和git进行项目托管","date":"2023-10-24T13:44:22.000Z","tags":null,"cover":"https://blog.fanpin.icu/2023/10/24/sourcetree/55e736d12f2eb938142ce56bc616b232e4dd6f65.webp","top_img":"https://blog.fanpin.icu/2023/10/24/sourcetree/55e736d12f2eb938142ce56bc616b232e4dd6f65.webp"},"headers":[],"relativePath":"baris/obsidian/sourcetree/sourcetree.md","filePath":"baris/obsidian/sourcetree/sourcetree.md","lastUpdated":1734431113000}'),_={name:"baris/obsidian/sourcetree/sourcetree.md"};function m(b,e,f,q,S,w){const a=r("center");return c(),o("div",null,[s(a,null,{default:i(()=>e[0]||(e[0]=[l("h2",null,"通过sourceTree和git进行项目托管",-1)])),_:1}),e[1]||(e[1]=n('<p>你是否还在为记不住git命令而焦头烂额，是否还在为某个操作命令到处找资料说明。今天你看到这篇文章，那基本上可以告别git命令了，有一款操作简单功能强大的图形化git仓库操作工具，那就是SourceTree。 SourceTree 是 Windows 和Mac OS X 下免费的 Git 和 Hg 客户端，拥有可视化界面，容易上手操作。同时它也是Mercurial和Subversion版本控制系统工具。支持创建、提交、clone、push、pull 和merge等操作。 其实在接触SourceTree之前，我还是使用最原始的git命令方式操作git仓库。虽然看起来很牛逼很厉害的样子，但是当某一段时间没怎么使用git命令了，是不是会这种每打一条命令就要去查一下资料。这样子即降低了工作效率，也是使得我们又要花点时间去温习一下之前的命令。后来我发现这款图形化操作工具，四个字评价，简单好用。这工具特别适合新手，以及不想去记那些复杂命令的同学。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>官网：<a href="https://www.sourcetreeapp.com/" target="_blank" rel="noreferrer">https://www.sourcetreeapp.com/</a></p><h2 id="克隆仓库" tabindex="-1">克隆仓库 <a class="header-anchor" href="#克隆仓库" aria-label="Permalink to &quot;克隆仓库&quot;">​</a></h2><p><img src="'+p+'" alt="" loading="lazy"></p><h2 id="提交用户改名" tabindex="-1">提交用户改名 <a class="header-anchor" href="#提交用户改名" aria-label="Permalink to &quot;提交用户改名&quot;">​</a></h2><p><img src="'+d+'" alt="" loading="lazy"></p><h2 id="丢弃更改" tabindex="-1">丢弃更改 <a class="header-anchor" href="#丢弃更改" aria-label="Permalink to &quot;丢弃更改&quot;">​</a></h2><p><img src="'+u+'" alt="" loading="lazy"></p><h2 id="提交" tabindex="-1">提交 <a class="header-anchor" href="#提交" aria-label="Permalink to &quot;提交&quot;">​</a></h2><p><img src="'+h+'" alt="" loading="lazy"></p><h2 id="拉取" tabindex="-1">拉取 <a class="header-anchor" href="#拉取" aria-label="Permalink to &quot;拉取&quot;">​</a></h2><p><img src="'+g+'" alt="" loading="lazy"></p>',13))])}const P=t(_,[["render",m]]);export{k as __pageData,P as default};
