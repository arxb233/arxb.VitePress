import{_ as o,c as e,a4 as i,o as a}from"./chunks/framework.CyeRpf1z.js";const p="/uptimerobot/uptimerobot-01.png",r="/uptimerobot/uptimerobot-02.png",s="/uptimerobot/uptimerobot-03.png",l="/uptimerobot/uptimerobot-04.png",n="/uptimerobot/uptimerobot-05.png",c="/uptimerobot/uptimerobot-06.png",m="/uptimerobot/uptimerobot-07.png",d="/uptimerobot/uptimerobot-08.png",u="/uptimerobot/uptimerobot-09.png",h="/uptimerobot/uptimerobot-10.png",b="/uptimerobot/uptimerobot-11.png",g="/uptimerobot/uptimerobot-12.png",_="/uptimerobot/uptimerobot-13.png",k="/uptimerobot/uptimerobot-14.png",y="/uptimerobot/uptimerobot-15.png",f="/uptimerobot/uptimerobot-16.png",v="/uptimerobot/uptimerobot-17.png",q="/uptimerobot/uptimerobot-18.png",z="/uptimerobot/uptimerobot-19.png",P="/uptimerobot/uptimerobot-20.png",U=JSON.parse('{"title":"UptimeRobot的注册及使用","description":"","frontmatter":{},"headers":[],"relativePath":"yiov/website/uptimerobot.md","filePath":"yiov/website/uptimerobot.md","lastUpdated":1734431113000}'),x={name:"yiov/website/uptimerobot.md"};function C(F,t,w,R,B,S){return a(),e("div",null,t[0]||(t[0]=[i('<h1 id="uptimerobot的注册及使用" tabindex="-1">UptimeRobot的注册及使用 <a class="header-anchor" href="#uptimerobot的注册及使用" aria-label="Permalink to &quot;UptimeRobot的注册及使用&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">(当前界面文档全部来自yiov.top)</p><ul><li><a href="https://yiov.top/" target="_blank" rel="noreferrer">yiov</a>「伊奥&#39;s 教程集」</li></ul></div><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>美国知名的网站监控服务工具，支持HTTP(s)网站、关键词、Ping 、端口等监控，免费版最多可监控 50 个网站</p><p>官网：<a href="https://uptimerobot.com/" target="_blank" rel="noreferrer">https://uptimerobot.com/</a></p><p><img src="'+p+'" alt="" loading="lazy"></p><h2 id="注册" tabindex="-1">注册 <a class="header-anchor" href="#注册" aria-label="Permalink to &quot;注册&quot;">​</a></h2><p>点击 <code>Register for FREE</code> 注册</p><p><img src="'+r+'" alt="" loading="lazy"></p><p>这里我们直接跳过 <code>Skip onboarding</code> ，一会再创建监视器</p><p><img src="'+s+'" alt="" loading="lazy"></p><p>最后建议设置一下时区，否则提示时间可能有偏差</p><p>右下角 <code>…</code> - Account details</p><p><img src="'+l+'" alt="" loading="lazy"></p><p>Timezone 选择 <code>Beijing ...</code></p><p><img src="'+n+'" alt="" loading="lazy"></p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><p><a href="https://linux.do/t/topic/113252/6" target="_blank" rel="noreferrer">https://linux.do/t/topic/113252/6</a><a href="https://qninq.cn/archives/site-status.html" target="_blank" rel="noreferrer">https://qninq.cn/archives/site-status.html</a></p><h2 id="添加监控" tabindex="-1">添加监控 <a class="header-anchor" href="#添加监控" aria-label="Permalink to &quot;添加监控&quot;">​</a></h2><p>点击 <code>Monitoring - New monitor</code> 创建监视器</p><p><img src="'+c+'" alt="" loading="lazy"></p><p><code>Monitor type</code> 类型选择 <code>HTTP / website monitoring</code></p><p>然后输入你要监控的网站，点击左下角 <code>Create monitor</code> 创建</p><div class="tip custom-block"><p class="custom-block-title">类型说明</p><ul><li><p>HTTP / website monitoring：http监控</p></li><li><p>Keyword monitoring：关键词监控</p></li><li><p>Ping monitoring：延迟监控</p></li><li><p>Port monitoring：端口监控</p></li><li><p>Cron job / Heartbeat monitoring：定时任务/心跳监测（仅会员可用）</p></li></ul></div><p><img src="'+m+'" alt="" loading="lazy"></p><p>这样就创建成功了</p><p><img src="'+d+'" alt="" loading="lazy"></p><p>在 <code>Status pages</code> 中，点击小眼睛</p><p><img src="'+u+'" alt="" loading="lazy"></p><p>进入了，查看生成的监控状态页面站点</p><p><img src="'+h+'" alt="" loading="lazy"></p><h2 id="状态页美化" tabindex="-1">状态页美化 <a class="header-anchor" href="#状态页美化" aria-label="Permalink to &quot;状态页美化&quot;">​</a></h2><h3 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h3><p>官方自带的是英文版，且不能绑定自己的域名，监控的网站也不能跳转</p><ul><li><p>方式1：自己部署，请参考同类型的 <a href="https://github.com/louislam/uptime-kuma" target="_blank" rel="noreferrer">Uptime-Kuma</a></p></li><li><p>方式2：搭建基于UptimeRonot API的面板 <a href="https://github.com/yb/uptime-status" target="_blank" rel="noreferrer">uptime-status</a> 或 <a href="https://github.com/imsyy/site-status" target="_blank" rel="noreferrer">site-status</a></p></li></ul><h3 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-label="Permalink to &quot;准备&quot;">​</a></h3><ul><li><p><a href="./nodejs.html">安装好nodejs之pnpm</a></p></li><li><p><a href="./pages/github.html">Github账号</a></p></li><li><p><a href="./VSCode.html">Vscode软件</a></p></li><li><p><a href="./pages/vercel.html">Vercel账号</a></p></li></ul><h3 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h3><p>本文以 <a href="https://github.com/imsyy/site-status" target="_blank" rel="noreferrer">site-status</a> 演示，下载仓库</p><p><img src="'+b+'" alt="" loading="lazy"></p><p>解压到任意盘符，右键使用Vscode打开</p><p><img src="'+g+'" alt="" loading="lazy"></p><p>主要是这个 <code>ur</code> 开头的API Key，其他按需修改即可</p><div class="danger custom-block"><p class="custom-block-title">注意</p><p>如果你又新增了网站，必须重新获取key，否则页面不会更新</p></div><p><img src="'+_+'" alt="" loading="lazy"></p><p>在 <a href="https://uptimerobot.com/" target="_blank" rel="noreferrer">UptimeRobot官网</a> 上方点击 <a href="https://old.uptimerobot.com/dashboard" target="_blank" rel="noreferrer">old app</a></p><p><img src="'+k+'" alt="" loading="lazy"></p><p>右上角 - My Settings</p><p><img src="'+y+'" alt="" loading="lazy"></p><p>下拉找到 <code>Read-Only API Key</code> ，点击 <code>Show/hide it.</code>，将api key 复制出来</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>一定要旧面板的api key，新面板的不可以，只有旧的是 <code>ur</code> 开头</p></div><p><img src="'+f+'" alt="" loading="lazy"></p><p>修改好后 <code>Ctrl+s</code> 保存，然后按 <code>Ctrl+~</code>键调出终端</p><p><img src="'+v+'" alt="" loading="lazy"></p><p>输入命令安装依赖</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p><img src="'+q+'" alt="" loading="lazy"></p><p>安装好后，进入开发模式，点击生成的本地端口连接查看，看是否正常</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p><img src="'+z+'" alt="" loading="lazy"></p><p>没问题，按 <code>Ctrl+C</code> 退出开发模式，使用 <a href="./pages/vercel.html">Vercel部署</a></p><details class="details custom-block"><summary>为什么不pnpm build</summary><p>build后将dist目录所有文件，上传到服务器，或者使用githubpages</p><p>而Vercel部署，只需拉取github代码，后台直接build生成</p></details><p><img src="'+P+'" alt="" loading="lazy"></p>',63)]))}const V=o(x,[["render",C]]);export{U as __pageData,V as default};
