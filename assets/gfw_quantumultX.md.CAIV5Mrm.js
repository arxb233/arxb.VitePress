import{_ as p,c as n,j as a,a as i,G as e,a4 as s,o as r,C as o}from"./chunks/framework.DBf_wRcB.js";const u="/quantumultX/quantumultX-01.png",c="/quantumultX/quantumultX-02.png",h="/quantumultX/quantumultX-03.png",m="/quantumultX/quantumultX-04.png",d="/quantumultX/quantumultX-05.png",g="/quantumultX/quantumultX-06.png",k="/quantumultX/quantumultX-07.png",b="/quantumultX/quantumultX-08.png",_="/quantumultX/quantumultX-09.png",q="/quantumultX/quantumultX-10.png",y="/quantumultX/quantumultX-11.png",X="/quantumultX/quantumultX-12.png",f="/quantumultX/quantumultX-13.png",F="/quantumultX/quantumultX-14.png",v="/quantumultX/quantumultX-15.png",E="/quantumultX/quantumultX-16.png",z="/quantumultX/quantumultX-17.png",C="/quantumultX/quantumultX-18.png",B="/quantumultX/quantumultX-19.png",P="/quantumultX/quantumultX-20.png",D="/quantumultX/quantumultX-21.png",x="/quantumultX/quantumultX-22.png",w="/quantumultX/quantumultX-23.png",A="/quantumultX/quantumultX-24.png",T="/quantumultX/quantumultX-25.png",O="/quantumultX/quantumultX-26.png",j="/quantumultX/quantumultX-27.png",S="/quantumultX/quantumultX-28.png",I="/quantumultX/quantumultX-29.png",H="/quantumultX/quantumultX-30.png",Q="/quantumultX/quantumultX-31.png",N="/quantumultX/quantumultX-32.png",R="/quantumultX/quantumultX-33.png",M="/quantumultX/quantumultX-34.png",K="/quantumultX/quantumultX-35.png",J="/quantumultX/quantumultX-36.png",U="/quantumultX/quantumultX-37.png",G="/quantumultX/quantumultX-38.png",L="/quantumultX/quantumultX-39.png",V="/quantumultX/quantumultX-40.png",W="/quantumultX/quantumultX-41.png",$="/quantumultX/quantumultX-42.png",Y="/quantumultX/quantumultX-43.png",Z="/quantumultX/quantumultX-44.png",tt="/quantumultX/quantumultX-45.png",at="/quantumultX/quantumultX-46.png",it="/quantumultX/quantumultX-47.png",st="/quantumultX/quantumultX-48.png",lt="/quantumultX/quantumultX-49.png",pt="/quantumultX/quantumultX-50.png",nt="/quantumultX/quantumultX-51.png",et="/quantumultX/quantumultX-52.png",rt="/quantumultX/quantumultX-53.png",ot="/quantumultX/quantumultX-54.png",ut="/quantumultX/quantumultX-55.png",ct="/quantumultX/quantumultX-56.png",ht="/quantumultX/quantumultX-57.png",mt="/quantumultX/quantumultX-58.png",dt="/quantumultX/quantumultX-59.png",gt="/quantumultX/quantumultX-60.png",kt="/quantumultX/quantumultX-61.png",bt="/quantumultX/quantumultX-62.png",_t="/quantumultX/quantumultX-63.png",qt="/quantumultX/quantumultX-64.png",yt="/quantumultX/quantumultX-65.png",Xt="/quantumultX/quantumultX-66.png",ft="/quantumultX/quantumultX-67.png",Ft="/quantumultX/quantumultX-68.png",vt="/quantumultX/quantumultX-69.png",Et="/quantumultX/quantumultX-70.png",zt="/quantumultX/quantumultX-71.png",Ct="/quantumultX/quantumultX-72.png",Bt="/quantumultX/quantumultX-73.png",Pt="/quantumultX/quantumultX-74.png",Dt="/quantumultX/quantumultX-75.png",xt="/quantumultX/quantumultX-76.png",wt="/quantumultX/quantumultX-77.png",At="/quantumultX/quantumultX-78.png",Tt="/quantumultX/quantumultX-79.png",Ot="/quantumultX/quantumultX-80.png",jt="/quantumultX/quantumultX-81.png",St="/quantumultX/quantumultX-82.png",It="/quantumultX/quantumultX-83.png",Ht="/quantumultX/quantumultX-84.png",Qt="/quantumultX/quantumultX-85.png",Nt="/quantumultX/quantumultX-86.png",Rt="/quantumultX/quantumultX-87.png",Mt="/quantumultX/quantumultX-88.png",Kt="/quantumultX/quantumultX-89.png",Jt="/quantumultX/quantumultX-90.png",Ut="/quantumultX/quantumultX-91.png",Gt="/quantumultX/quantumultX-92.png",Lt="/quantumultX/quantumultX-93.png",Vt="/quantumultX/quantumultX-94.png",Wt="/quantumultX/quantumultX-95.png",$t="/quantumultX/quantumultX-96.png",Yt="/quantumultX/quantumultX-97.png",Zt="/quantumultX/quantumultX-98.png",ta="/quantumultX/quantumultX-99.png",aa="/quantumultX/quantumultX-100.png",ia="/quantumultX/quantumultX-101.png",sa="/quantumultX/quantumultX-102.png",la="/quantumultX/quantumultX-103.png",pa="/quantumultX/quantumultX-104.png",na="/quantumultX/quantumultX-105.png",ea="/quantumultX/quantumultX-106.png",ra="/quantumultX/quantumultX-107.png",oa="/quantumultX/quantumultX-108.png",ua="/quantumultX/quantumultX-109.png",ca="/quantumultX/quantumultX-110.png",ha="/quantumultX/quantumultX-111.png",ma="/quantumultX/quantumultX-112.png",da="/quantumultX/quantumultX-113.png",ga="/quantumultX/quantumultX-114.png",ka="/quantumultX/quantumultX-115.png",ba="/quantumultX/quantumultX-116.png",_a="/quantumultX/quantumultX-117.png",qa="/quantumultX/quantumultX-118.png",ya="/quantumultX/quantumultX-119.png",Xa="/quantumultX/quantumultX-120.png",fa="/quantumultX/quantumultX-121.png",Fa="/quantumultX/quantumultX-122.png",va="/quantumultX/quantumultX-123.png",Ea="/quantumultX/quantumultX-124.png",za="/quantumultX/quantumultX-125.png",Ca="/quantumultX/quantumultX-126.png",Ba="/quantumultX/quantumultX-127.png",Pa="/quantumultX/quantumultX-128.png",Da="/quantumultX/quantumultX-129.png",Ha=JSON.parse('{"title":"圈X安装及使用","description":"","frontmatter":{},"headers":[],"relativePath":"gfw/quantumultX.md","filePath":"gfw/quantumultX.md","lastUpdated":null}'),xa={name:"gfw/quantumultX.md"};function wa(Aa,t,Ta,Oa,ja,Sa){const l=o("ArticleMetadata");return r(),n("div",null,[t[0]||(t[0]=a("h1",{id:"圈x安装及使用",tabindex:"-1"},[i("圈X安装及使用 "),a("a",{class:"header-anchor",href:"#圈x安装及使用","aria-label":'Permalink to "圈X安装及使用"'},"​")],-1)),e(l),t[1]||(t[1]=s('<h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>Quantumult X是一款强大的网络工具，可以用于代理、规则分流、脚本运行、抓包等，简称圈X</p><p>教程在 <a href="https://www.notion.so/Quantumult-X-1d32ddc6e61c4892ad2ec5ea47f00917" target="_blank" rel="noreferrer">圈X不完全教程的基础</a> 上进行了补充</p><p>官网：<a href="https://quantumult.app/x/" target="_blank" rel="noreferrer">https://quantumult.app/x/</a></p><p>仓库：<a href="https://github.com/crossutility/Quantumult-X/" target="_blank" rel="noreferrer">https://github.com/crossutility/Quantumult-X/</a></p><p><img src="'+u+'" alt="" loading="lazy"></p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>你需要注册一个 <a href="./../iPhone/Apple_ID.html">美区Apple ID</a>，充值并在付费购买它，最后 <a href="https://apps.apple.com/us/app/quantumult-x/id1443988620" target="_blank" rel="noreferrer">下载安装</a></p><div class="warning custom-block"><p class="custom-block-title">！千万不要买共享账号</p><p>开发者做了限制，共享号下载的不能使用</p></div><p><img src="'+c+'" alt="" loading="lazy"></p><p>安装好后进入圈X - 右下角 <code>风车</code> 设置 - 拉倒底部 <code>其他设置</code> - 拉倒底部</p><p>版本号后面蓝色的是正版，红色和绿色皆为非正版，不建议使用</p><p><img src="'+h+'" alt="" loading="lazy"></p><h2 id="主界面" tabindex="-1">主界面 <a class="header-anchor" href="#主界面" aria-label="Permalink to &quot;主界面&quot;">​</a></h2><p>主界面如下图都一一注明了</p><p><img src="'+m+'" alt="" loading="lazy"></p><p><img src="'+d+'" alt="" loading="lazy"></p><h2 id="节点" tabindex="-1">节点 <a class="header-anchor" href="#节点" aria-label="Permalink to &quot;节点&quot;">​</a></h2><p>非常重要，它是圈X运行的基础，必须全程使用代理，不然无法使用</p><hr><h3 id="科学上网" tabindex="-1">科学上网 <a class="header-anchor" href="#科学上网" aria-label="Permalink to &quot;科学上网&quot;">​</a></h3><p>这里就要用到机场了，通过订阅使用机场的节点，实现代理科学上网</p><p>使用 <code>iKUUU</code> 免费机场演示，官网：<a href="https://ikuuu.pw/" target="_blank" rel="noreferrer">https://ikuuu.pw/</a></p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>主要用于普及订阅知识，后续有条件换好点的 <a href="./channel.html">点我查看白嫖机场</a></p></div><p><img src="'+g+'" alt="" loading="lazy"></p><p>点击 <code>复制Clash订阅链接</code> 会自动复制到剪切板，但是圈X不支持这种格式，需要转换</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>本来直接选 <code>复制SS订阅链接</code> 即可，但是这个机场不能用这个功能，只能选择 <code>复制Clash订阅链接</code></p></div><p>订阅格式转换：<a href="https://dove.589669.xyz/web" target="_blank" rel="noreferrer">https://dove.589669.xyz/web</a></p><p>粘贴订阅，选择圈X，点击 <code>复制转换链接</code>，打开圈X - 风车</p><p><img src="'+k+'" alt="" loading="lazy"></p><p>节点 - 节点资源，右上角添加</p><p><img src="'+b+'" alt="" loading="lazy"></p><p>标签随便，资源路径填我们 <code>刚转换的订阅链接</code> ，右上角保存即可</p><p><img src="'+_+'" alt="" loading="lazy"></p><p>勾选状态代表启用中，回到主界面，就能看到添加成功的节点了</p><p><img src="'+q+'" alt="" loading="lazy"></p><p>测一下网速，选可用的节点打开开关，要是都显示 <code>X</code> 不可用，直接换机场</p><p><img src="'+y+'" alt="" loading="lazy"></p><hr><h3 id="资源解析器" tabindex="-1">资源解析器 <a class="header-anchor" href="#资源解析器" aria-label="Permalink to &quot;资源解析器&quot;">​</a></h3><p>资源解析器就是为了解决订阅转换的问题，它会自动本地处理完成转换</p><p>随便选一个速度可以的节点，打开圈X开关</p><p><img src="'+X+'" alt="" loading="lazy"></p><p>点风车-下拉到底部，配置文件-编辑，右上角箭头 选择 <code>general</code></p><p><img src="'+f+'" alt="" loading="lazy"></p><p>在 <code>[general]</code> 下面粘贴 <a href="https://github.com/KOP-XIAO/QuantumultX/" target="_blank" rel="noreferrer">资源解析器</a> 代码，右上角保存</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resource_parser_url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js</span></span></code></pre></div><p><img src="'+F+'" alt="" loading="lazy"></p><p>然后在 <code>节点- 节点资源</code> ，右上角添加页面下</p><p><img src="'+v+'" alt="" loading="lazy"></p><p>打开 资源解析器开关 即可</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>直接返回退出即可，也可以添加新节点来试试效果</p></div><p><img src="'+E+'" alt="" loading="lazy"></p><hr><h3 id="添加" tabindex="-1">添加 <a class="header-anchor" href="#添加" aria-label="Permalink to &quot;添加&quot;">​</a></h3><p>不是很常用，适用于一些分享的单个节点，即便是单个节点也仍推荐使用 <a href="#节点资源">节点资源</a></p><p>对应配置文件中的 <a href="#编辑">[server_local]</a> 模块</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>添加：仅支持ss协议</p><p>URI：支持ss / ssr / vmess / https / trojan / vless 的节点</p><p>扫码：支持ss / ssr / vmess / https / trojan / vless 的节点二维码</p></div><p><img src="'+z+'" alt="" loading="lazy"></p><hr><h3 id="节点资源" tabindex="-1">节点资源 <a class="header-anchor" href="#节点资源" aria-label="Permalink to &quot;节点资源&quot;">​</a></h3><p>对应配置文件中的 <a href="#编辑">[server_remote]</a> 模块</p><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li><p>支持 ss / ssr / vmess / https /trojan / vless 的节点</p></li><li><p>以及由 <a href="#资源解析器">资源解析器</a> 解析的各种格式</p></li></ul></div><p>进入节点资源，右上角第一个是 <code>配置片段 - 新建</code> ，适用于一些分享的节点</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>即以远程订阅的方式，来管理本地节点</p></div><p>找了一个分享的Vmess/SS等节点，粘贴保存</p><p><img src="'+C+'" alt="" loading="lazy"></p><p>文件名可以改，也可以默认</p><p>跳转到添加节点界面，打开资源解析器，保存</p><p><img src="'+B+'" alt="" loading="lazy"></p><p>主界面就能看到我们添加的节点了</p><p><img src="'+P+'" alt="" loading="lazy"></p><p>进入节点资源，右上角第二个是 <code>添加</code> ，即远程订阅</p><p><img src="'+D+'" alt="" loading="lazy"></p><p>找 <a href="./channel.html">白嫖机场</a> 演示一下，复制任意订阅，粘贴到 <code>资源路径</code> ，打开资源解析器开关</p><p><img src="'+x+'" alt="" loading="lazy"></p><p>添加成功后，测一下速，选择延迟低的节点即可</p><p><img src="'+w+'" alt="" loading="lazy"></p><p>在节点资源中，左滑可以更新/分享/删除，长按可以移动顺序，点击可以编辑</p><p><img src="'+A+'" alt="" loading="lazy"></p><h2 id="策略组" tabindex="-1">策略组 <a class="header-anchor" href="#策略组" aria-label="Permalink to &quot;策略组&quot;">​</a></h2><p>它是一个通过对 <a href="#节点">节点</a> 进行分组，然后服务于 <a href="#分流规则">分流规则</a> 之间功能</p><p>对应配置文件中的 <a href="#编辑">[policy]</a> 模块</p><hr><h3 id="默认格式" tabindex="-1">默认格式 <a class="header-anchor" href="#默认格式" aria-label="Permalink to &quot;默认格式&quot;">​</a></h3><p>首次使用，需要添加一次默认格式，才能看到按钮</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">策略组名,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> proxy,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> direct,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reject</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">3种策略</p><p>PROXY：代理 (使用代理访问)</p><p>DIRECT：直连 (不使用代理访问)</p><p>REJECT：屏蔽 (不访问)</p></div><p>主界面左下角的 <code>快捷栏 - 编辑</code> 和 设置里的<code> 配置文件 - 编辑</code> 是一样的</p><p><img src="'+T+'" alt="" loading="lazy"></p><p>点击 <code>policy</code> ，粘贴默认策略组格式</p><p><img src="'+O+'" alt="" loading="lazy"></p><p>回到主界面就看到了，和填写的一一对应</p><hr><h3 id="手动添加" tabindex="-1">手动添加 <a class="header-anchor" href="#手动添加" aria-label="Permalink to &quot;手动添加&quot;">​</a></h3><p>我们可以尝试手动添加，方便更好的了解，点击 <code>∑+</code></p><p><img src="'+j+'" alt="" loading="lazy"></p><p>类型选择 <code>static</code>，其他信息一次填入</p><div class="tip custom-block"><p class="custom-block-title">5种策略组</p><p>static：静态策略 (常用)</p><p>available：健康检查策略 (不常用)</p><p>Round-Robin：轮询策略 (不常用)</p><p>dest-hash：负载均衡 (不常用)</p><p>url-latency-benchmark：选取延迟最优节点 (不常用)</p></div><div class="tip custom-block"><p class="custom-block-title">说明</p><p>策略名：<code>🇭🇰香港</code>，这里的 <code>🇭🇰</code> 是 <a href="https://emoji6.com/emojiall/" target="_blank" rel="noreferrer">emoji旗帜表情</a> ，不是英文拼音</p><p>图标：使用的是 <a href="https://github.com/Orz-3/mini" target="_blank" rel="noreferrer">@Orz-3</a> 的 <a href="https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png" target="_blank" rel="noreferrer">香港图标</a>，也可以是用 <a href="https://github.com/Koolson/Qure" target="_blank" rel="noreferrer">Koolson</a>，也可自己制作尺寸108*108像素,png格式</p><p>匹配资源：根据订阅名正则匹配 (不常用)</p><p>匹配节点：<code>🇭🇰|香港|HK</code> ，正则匹配用 <code>|</code> 隔开 (常用)</p></div><p><img src="'+S+'" alt="" loading="lazy"></p><p>添加成功后，主机面就可以看到，美观了很多</p><p><img src="'+I+'" alt="" loading="lazy"></p><p>之前默认添加的，并没有起到作用，我们直接删除</p><p><img src="'+H+'" alt="" loading="lazy"></p><p><img src="'+Q+'" alt="" loading="lazy"></p><p>针对常用的节点，我们来做个完整点的策略组</p><p><img src="'+N+`" alt="" loading="lazy"></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url-latency-benchmark</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">优选节点,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> server-tag-regex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.*,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> check-interval</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">300,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tolerance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> img-url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">globe.system</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">🇭🇰香港,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> server-tag-regex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">🇭🇰</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">香港</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HK,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">🇹🇼台湾,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> server-tag-regex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">🇹🇼</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">台湾TW,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">🇸🇬新加坡,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> server-tag-regex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">🇸🇬</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">新加坡</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SG,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">🇯🇵日本,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> server-tag-regex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">🇯🇵</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">日本</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">JP,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">🇺🇸美国,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> server-tag-regex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">🇺🇸</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">美国</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">US,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">🇰🇷韩国,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> server-tag-regex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">🇰🇷</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">韩国</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">KR,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li><p>优选节点：仅能筛选出延迟最低的节点，无法自动切换</p></li><li><p>server-tag-regex：根据节点名匹配</p></li><li><p>resource-tag-regex: 根据订阅名来筛选节点</p></li></ul></div><p><img src="`+R+'" alt="" loading="lazy"></p><p>长按策略组还可以进行编辑，添加节点等操作</p><p><img src="'+M+'" alt="" loading="lazy"></p><h2 id="分流" tabindex="-1">分流 <a class="header-anchor" href="#分流" aria-label="Permalink to &quot;分流&quot;">​</a></h2><p>简而言之就是，访问不同的网站，自动走你指定好的策略组节点</p><hr><h3 id="分流规则" tabindex="-1">分流规则 <a class="header-anchor" href="#分流规则" aria-label="Permalink to &quot;分流规则&quot;">​</a></h3><p>虽然这种本地添加并不常用，但涉及分流的知识点</p><p>对应配置文件中的 <a href="#编辑">[filter_local]</a> 模块</p><p>点分流规则，右上角 <code>+</code> 号</p><p><img src="'+K+'" alt="" loading="lazy"></p><p><img src="'+J+'" alt="" loading="lazy"></p><div class="tip custom-block"><p class="custom-block-title">分流规则类型</p><p><strong>HOST：域名匹配 (例：www.google.com)</strong></p><p><strong>HOST-SUFFIX：域名后缀匹配 (例：google.com)</strong></p><p><strong>HOST-WILDCARD：域名通配符匹配 (例：*.google.com)</strong></p><p><strong>HOST-KEYWORD：域名关键字匹配 (例：google)</strong></p><p>USER-AGENT：用户代理匹配 (不常用)</p><p>IP-CIDR：IP匹配 (不常用)</p><p>IP6-CIDR：IPV6匹配 (不常用)</p><p>GEOIP：IP数据库匹配 (不常用)</p><p>IP-ASN：IP归属地匹配 (不常用)</p></div><div class="tip custom-block"><p class="custom-block-title">关于优先级</p><p>分流严格遵循优先级，HOST &gt; HOST-SUFFIX &gt; ... &gt; IP-ASN</p><p>比如：2个规则存在同样的域名，分别使用了 <code>HOST</code> 和 <code>HOST-SUFFIX</code> 规则，则 仅 <code>HOST</code> 生效</p><p>详情请 <a href="https://divineengine.net/article/policy-and-filter-of-quantumult-x/" target="_blank" rel="noreferrer">参考@DivineEngine的解析</a> ，这里不再赘述</p></div><p>在策略中，除了默认的3个策略，其他的都是自己添加的，可以自行选择</p><p><img src="'+U+'" alt="" loading="lazy"></p><p>我们添加一个试试，来了解一下简单的使用</p><p>类型选 <code>HOST-SUFFIX</code>，参数填 <code>baidu.com</code>，策略选 <code>REJECT</code></p><p><img src="'+G+'" alt="" loading="lazy"></p><p>回到主界面，长按风车，切换成 <code>规则分流</code> 模式</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>必须切换，否则分流规则不生效，默认是全局代理模式了</p></div><p><img src="'+L+'" alt="" loading="lazy"></p><p>我们访问 <a href="https://www.baidu.com/" target="_blank" rel="noreferrer">百度</a> ，发现已经无法访问了，因为策略就是屏蔽</p><p><img src="'+V+'" alt="" loading="lazy"></p><p>删除，就可以恢复正常使用了</p><p><img src="'+W+'" alt="" loading="lazy"></p><p>那这些默认的分流规则，代表什么意思呢</p><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li><p>FINAL：兜底规则，没有匹配任何策略组，就自动选择 代理 <code>PROXY</code></p></li><li><p>IP-CIDR：IP匹配，保持默认即可</p></li><li><p>GEOIP：IP数据库匹配，这里是 <code>CN</code> 直接匹配了国内的域名，只要是国内的使用 直连 <code>DIRECT</code>，这就是为什么圈X访问国内网站，IP还在国内的原因</p></li></ul></div><p><img src="'+$+'" alt="" loading="lazy"></p><hr>',140)),t[2]||(t[2]=a("h3",{filter:"",id:"规则资源",tabindex:"-1"},[i("规则资源 "),a("a",{class:"header-anchor",href:"#规则资源","aria-label":'Permalink to "规则资源 {filter}"'},"​")],-1)),t[3]||(t[3]=s('<p>分流规则逐个添加的很慢，而规则资源就是远程批量添加，文件的格式为 <code>*.list</code></p><p>对应配置文件中的 <a href="#编辑">[filter_remote]</a> 模块</p><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li><p><a href="https://github.com/DivineEngine/Profiles/tree/master/Quantumult/Filter" target="_blank" rel="noreferrer">神机规则</a>：一代最强规则，多数规则皆由它更改而来，但目前已停更</p></li><li><p><a href="https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/" target="_blank" rel="noreferrer">@blackmatrix7的规则</a>：目前仍在热心更新的大佬，分类非常细致</p></li></ul></div><p>为了更了解及使用规则，我们直接演示一个：B站切换港区</p><p>规则资源 - 右上角 添加</p><p><img src="'+Y+'" alt="" loading="lazy"></p><p>在 <a href="https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/" target="_blank" rel="noreferrer">@blackmatrix7的规则</a> 找到BiliBili</p><p><img src="'+Z+'" alt="" loading="lazy"></p><p>点击 list 文件 - 右上 <code>view</code> - 复制打开后的地址</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>这里的分流规则后面填写的是 <code>BiliBili</code> 策略组，而我们没有这个策略组，系统会自动新建</p></div><p><img src="'+tt+'" alt="" loading="lazy"></p><p>资源路径填写list文件地址，标签自己命令一个</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/BiliBili/BiliBili.list</span></span></code></pre></div><p><img src="'+at+'" alt="" loading="lazy"></p><p>添加成功了，其实我们再分流规则中可以看到，有一堆的分流信息</p><p><img src="'+it+'" alt="" loading="lazy"></p><p>回到主界面，会看到自动创建了一个 <code>BiliBili</code> 的策略组，而我们需要港区的节点策略组才可以达到目的，长按 <code>BiliBili策略组</code> - 编辑</p><p><img src="'+st+'" alt="" loading="lazy"></p><p>选择香港和直连的策略，国区就使用直连，港区就使用香港策略组</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>顺便加个 <a href="https://raw.githubusercontent.com/Orz-3/mini/master/Color/Bili.png" target="_blank" rel="noreferrer">BiliBili图标</a> 更好看一点</p></div><p><img src="'+lt+'" alt="" loading="lazy"></p><p>打开BiliBili搜 <code>进击的巨人</code> ，发现啥也没有，我们切换到香港策略组，划掉APP后台重新进入搜索发现就能看了</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>切换前，请先测速，找能用的节点，否则无法生效</p></div><p><img src="'+pt+'" alt="" loading="lazy"></p><div class="warning custom-block"><p class="custom-block-title">建议</p><p>如果你是小白，确实小白配置比较容易，但是有非常多的策略其实是用不上的</p><p>自己根据APP添加也并不麻烦</p></div><h2 id="mitm" tabindex="-1">MitM <a class="header-anchor" href="#mitm" aria-label="Permalink to &quot;MitM&quot;">​</a></h2><p>主要是用于解析https，常与重写搭配使用，保持开关常开即可</p><p>对应配置文件中的 <a href="#编辑">[MitM]</a> 模块</p><p>打开MitM开关，提示错，未生成证书</p><p><img src="'+nt+'" alt="" loading="lazy"></p><p>点击 <code>生成证书</code>，证书保存成功</p><p><img src="'+et+'" alt="" loading="lazy"></p><p>点击 <code>配置证书</code> ，要跳转浏览器 确定</p><p><img src="'+rt+'" alt="" loading="lazy"></p><p>允许下载描述文件，提示下载完成即可</p><p><img src="'+ot+'" alt="" loading="lazy"></p><p>打开手机设置，点击已下载的描述文件，安装</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>没有提示的，在设置 - 通用 - 描述文件与设备管理 里</p></div><p><img src="'+ut+'" alt="" loading="lazy"></p><p><img src="'+ct+'" alt="" loading="lazy"></p><p>安装完成后，在 关于本机 - 证书信任设置</p><p><img src="'+ht+'" alt="" loading="lazy"></p><p>打开圈X的信任开关，回到主界面打开 <code>MitM开关</code> 即可</p><p><img src="'+mt+'" alt="" loading="lazy"></p><p><img src="'+dt+'" alt="" loading="lazy"></p><h2 id="重写" tabindex="-1">重写 <a class="header-anchor" href="#重写" aria-label="Permalink to &quot;重写&quot;">​</a></h2><p>可以用于修改http请求和响应，也是最核心的功能，首先要打开重写开关</p><p>常见的去广告等功能，就是利用的重写</p><p><img src="'+gt+'" alt="" loading="lazy"></p><hr><h3 id="重写规则" tabindex="-1">重写规则 <a class="header-anchor" href="#重写规则" aria-label="Permalink to &quot;重写规则&quot;">​</a></h3><p>本地手动添加比较繁琐，但是有设计知识点，也讲一下</p><p>对应配置文件中的 <a href="#编辑">[rewrite_local]</a> 模块</p><p>点击 重写规则，这里是空的，右上角添加</p><p><img src="'+kt+'" alt="" loading="lazy"></p><p>点类型可以看到，所有的类型</p><p><img src="'+bt+'" alt="" loading="lazy"></p><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li>reject：屏蔽，返回404状态码</li><li>reject-img：屏蔽，返回HTTP状态码200并附带 1px gif</li><li>reject-dict：屏蔽，返回HTTP状态码200并附带空的 JSON 对象</li><li>reject-array：屏蔽，返回HTTP状态码200并附带空的 JSON 数组</li><li>reject-200：屏蔽，返回HTTP状态码200</li></ul><hr><ul><li>302：重定向，将POST请求改成GET,不保留请求体</li><li>307：重定向，将POST重定向到POST,PUT重定向到PUT，会保留请求体</li></ul><hr><ul><li><p>request-header：请求头，可匹配修改请求头</p></li><li><p>request-body：请求体，可匹配修改请求体</p></li><li><p>response-header：响应头，可匹配修改响应头</p></li><li><p>response-body：响应体，可匹配修改响应体</p></li></ul><hr><ul><li>echo-response：响应体内容</li></ul><hr><ul><li>script-request-header：脚本返回的请求头</li><li>script-request-body：脚本返回的请求体</li><li>script-response-header：脚本返回的响应头</li><li>script-response-body：脚本返回的响应体</li></ul><hr><ul><li>script-echo-response：脚本返回用户自定义的响应体(虚构的响应，不包含$request数据)</li><li>script-analyze-echo-response：脚本返回用户自定义的响应体(真实的响应，包含$request数据)</li></ul></div><p>本次使用的是 <a href="https://github.com/ddgksf2013/" target="_blank" rel="noreferrer">@墨鱼</a> 的 <a href="https://github.com/ddgksf2013/Scripts/raw/master/bilibili_json.js" target="_blank" rel="noreferrer">B站去广告脚本</a> 演示</p><p><img src="'+_t+'" alt="" loading="lazy"></p><p>点 view 查看获取脚本链接</p><p><img src="'+qt+'" alt="" loading="lazy"></p><p>填写信息后保存</p><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li><p>类型：<code>script-response-body</code></p></li><li><p>匹配URL：<code>^https?:\\/\\/app\\.bilibili\\.com\\/x\\/resource\\/show\\/tab</code></p></li><li><p>脚本路径：<a href="https://github.com/ddgksf2013/Scripts/raw/master/bilibili_json.js" target="_blank" rel="noreferrer">https://github.com/ddgksf2013/Scripts/raw/master/bilibili_json.js</a></p></li></ul><p>注：这里的URL涉及到正则匹配，可以使用 <a href="https://www.icloud.com/shortcuts/ca8bb02b30d144b3996c84211372a011" target="_blank" rel="noreferrer">QX生成正则 丨 快捷指令</a></p></div><p><img src="'+yt+'" alt="" loading="lazy"></p><p>然后再 MitM 中添加主机名，即hostname，右上角添加</p><p><img src="'+Xt+'" alt="" loading="lazy"></p><p>主机名输入：<code>app.bilibili.com</code></p><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li><p>通配符 <code>*</code>：匹配所有字符，比如：<code>zhidao.baidu.com</code>，可用 <code>*.baidu.com</code> 表示</p></li><li><p>通配符 <code>?</code>：匹配单个字符，比如：<code>google.com</code>，可用 <code>goo?le.com</code> 表示</p></li><li><p>通配符组合 <code>*</code> 和 <code>?</code>：比如：<code>support.apple.com</code>，可用 <code>*.ap?le.com</code> 表示</p></li><li><p>通配符 <code>-</code>：排除主机，比如：<code>yiov.github.io</code>，可用 <code>-*.io</code> 表示</p></li></ul></div><p><img src="'+ft+'" alt="" loading="lazy"></p><p>看下使用脚本后B站的前后对比，少了几个标签</p><p><img src="'+Ft+'" alt="" loading="lazy"></p><p>最后我们删除即可恢复</p><p><img src="'+vt+'" alt="" loading="lazy"></p><hr>',75)),t[4]||(t[4]=a("h3",{rewrite:"",id:"规则资源-1",tabindex:"-1"},[i("规则资源 "),a("a",{class:"header-anchor",href:"#规则资源-1","aria-label":'Permalink to "规则资源 {rewrite}"'},"​")],-1)),t[5]||(t[5]=s('<p>这是一个比较常用的功能了，格式是 <code>*.conf</code></p><p>对应配置文件中的 <a href="#编辑">[rewrite_remote]</a> 模块</p><p>我们同样来演示一下：B站去广告，点 规则资源，右上角添加</p><p><img src="'+Et+'" alt="" loading="lazy"></p><p>在墨鱼的 <a href="https://github.com/ddgksf2013/Rewrite/" target="_blank" rel="noreferrer">重写仓库</a> 找到 <a href="https://raw.githubusercontent.com/ddgksf2013/Rewrite/master/AdBlock/Bilibili.conf" target="_blank" rel="noreferrer">Bilibili.conf</a></p><p><img src="'+zt+'" alt="" loading="lazy"></p><p><img src="'+Ct+'" alt="" loading="lazy"></p><p>粘贴 在资源路径，资源标签就写B站去广告</p><p><img src="'+Bt+'" alt="" loading="lazy"></p><p>添加成功后，我们再重写规则里，可以看到添加了一堆不可删除的规则</p><p><img src="'+Pt+'" alt="" loading="lazy"></p><p>主机名也是一样</p><p><img src="'+Dt+'" alt="" loading="lazy"></p><p>打开B站APP看看效果，已经清爽很多了</p><p><img src="'+xt+'" alt="" loading="lazy"></p><p>点击可以编辑，长按可以排序，左滑可以更多操作</p><p><img src="'+wt+'" alt="" loading="lazy"></p><h2 id="工具-分析" tabindex="-1">工具&amp;分析 <a class="header-anchor" href="#工具-分析" aria-label="Permalink to &quot;工具&amp;分析&quot;">​</a></h2><p>这个就是我们常见的跑js脚本以及抓包工具</p><p>对应配置文件中的 <a href="#编辑">[task_local]</a> 模块</p><hr><h3 id="http请求-单脚本" tabindex="-1">HTTP请求(单脚本) <a class="header-anchor" href="#http请求-单脚本" aria-label="Permalink to &quot;HTTP请求(单脚本)&quot;">​</a></h3><p>我们直接开演，更好的看懂及了解</p><p>点 HTTP请求 - 右上角 <code>+</code> 号 添加</p><p><img src="'+At+'" alt="" loading="lazy"></p><p>执行日期 - 高级</p><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li><p>下一步：在线编写脚本</p></li><li><p>高级：远程引用脚本</p></li><li><p>文本方式添加：本地添加脚本</p></li></ul></div><p><img src="'+Tt+'" alt="" loading="lazy"></p><p>以 <a href="https://github.com/NobyDa/" target="_blank" rel="noreferrer">野比大佬 @NobyDa</a> 的 <a href="https://raw.githubusercontent.com/NobyDa/Script/master/JD-DailyBonus/JD_DailyBonus.js" target="_blank" rel="noreferrer">京东多合一签到</a> 脚本为例</p><p>我们按脚本文件内的教程进行配置，逐个添加</p><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li><p>标签：京东多合一签到</p></li><li><p>Cron表达式：5 0 * * *</p></li><li><p>脚本路径：<a href="https://raw.githubusercontent.com/NobyDa/Script/master/JD-DailyBonus/JD_DailyBonus.js" target="_blank" rel="noreferrer">https://raw.githubusercontent.com/NobyDa/Script/master/JD-DailyBonus/JD_DailyBonus.js</a></p></li><li><p>图标：使用了<a href="https://github.com/Orz-3/" target="_blank" rel="noreferrer">Orz-3</a> 的 <a href="https://raw.githubusercontent.com/Orz-3/mini/master/Color/jd.png" target="_blank" rel="noreferrer">京东图标</a></p></li></ul></div><p><img src="'+Ot+'" alt="" loading="lazy"></p><p><img src="'+jt+`" alt="" loading="lazy"></p><p>还需要在 <code>rewrite_local</code> 本地重写添加代码</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取京东Cookie. </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">^https:\\/\\/(api\\.m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">me-api</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">com</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">client\\.action\\?functionId</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=signBean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">user_new\\/info\\/GetJDUserInfoUnion\\?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) url script-request-header https://raw.githubusercontent.com/NobyDa/Script/master/JD-DailyBonus/JD_DailyBonus.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取钢镚签到body. </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">^https:\\/\\/ms\\.jr\\.jd\\.com\\/gw\\/generic\\/hy\\/h5\\/m\\/appSign\\?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> script-request-body</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/NobyDa/Script/master/JD-DailyBonus/JD_DailyBonus.js</span></span></code></pre></div><p><img src="`+St+'" alt="" loading="lazy"></p><p><img src="'+It+'" alt="" loading="lazy"></p><p>在 <code>MitM</code> 添加hostname</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ms.jr.jd.com,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> me-api.jd.com,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> api.m.jd.com</span></span></code></pre></div><p><img src="'+Ht+'" alt="" loading="lazy"></p><p><img src="'+Qt+'" alt="" loading="lazy"></p><p>脚本里说要先登录网页版，再打开日历页，会提示获取到CK</p><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li><p>京东主页登录页：<a href="https://home.m.jd.com/" target="_blank" rel="noreferrer">https://home.m.jd.com/</a></p></li><li><p>京东日历签到页：<a href="https://bean.m.jd.com/bean/signIndex.action" target="_blank" rel="noreferrer">https://bean.m.jd.com/bean/signIndex.action</a></p></li></ul></div><p><img src="'+Nt+'" alt="" loading="lazy"></p><p>脚本往右滑，即可运行及查看</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>这里提示失败，是脚本的问题，大佬已经N年没有维护了</p><p>本次也仅是演示使用步骤，勿要较真</p></div><p><img src="'+Rt+'" alt="" loading="lazy"></p><p>顺便讲一下界面</p><p><img src="'+Mt+'" alt="" loading="lazy"></p><p>以及Cron表达式</p><p><img src="'+Kt+'" alt="" loading="lazy"></p><hr><h3 id="http请求-多脚本" tabindex="-1">HTTP请求(多脚本) <a class="header-anchor" href="#http请求-多脚本" aria-label="Permalink to &quot;HTTP请求(多脚本)&quot;">​</a></h3><p>格式是 <code>*.json</code> ，我们直接拉仓库就行</p><p>点右上角第一个任务仓库，进入后添加系统默认的任务仓库，直接点好的</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>这里一定要先加系统的，否则无法使用</p></div><details class="details custom-block"><summary>点了取消，没有添加怎么办</summary><p>复制json链接添加即可</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https://raw.githubusercontent.com/crossutility/Quantumult-X/master/gallery.json</span></span></code></pre></div></details><p><img src="'+Jt+'" alt="" loading="lazy"></p><p>仍然用 <a href="https://github.com/NobyDa" target="_blank" rel="noreferrer">野比大佬 @NobyDa</a> 的 <a href="https://github.com/NobyDa/Script/blob/master/NobyDa_BoxJs.json" target="_blank" rel="noreferrer">脚本仓库合辑</a> 演示</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https://raw.githubusercontent.com/NobyDa/Script/master/NobyDa_BoxJs.json</span></span></code></pre></div><p><img src="'+Ut+'" alt="" loading="lazy"></p><p>添加成功后，其他脚本点击 <code>+</code> 按需添加</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>账号多的，可以用 <a href="./boxjs.html">Boxjs,点我查看教程</a></p></div><p><img src="'+Gt+'" alt="" loading="lazy"></p><div class="danger custom-block"><p class="custom-block-title">关于其他脚本</p><p>脚本的诞生是都基于活动，而活动是有时效性的</p><p>教程为了保证可用性，无法列出所有脚本</p><p>文章底部会放大佬的仓库，可以自行查找</p></div><hr><h3 id="http抓取" tabindex="-1">HTTP抓取 <a class="header-anchor" href="#http抓取" aria-label="Permalink to &quot;HTTP抓取&quot;">​</a></h3><p>就是抓包，抓取的数据用来去广告或者编写脚本</p><div class="tip custom-block"><p class="custom-block-title">界面说明</p><ul><li><p>右上角第1个：开启 / 关闭抓包</p></li><li><p>右上角第2个：收藏数据</p></li><li><p>额外主机名：抓包时额外添加的MitM的hostname生效，关闭抓包时失效</p></li></ul></div><p><img src="'+Lt+'" alt="" loading="lazy"></p><p>开启开关，随便打开网页或APP，看一下抓取的数据</p><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li><p>关闭时：有 <code>斜杠 \\</code></p></li><li><p>开启时：没有 <code>斜杠 \\</code></p></li></ul></div><p><img src="'+Vt+'" alt="" loading="lazy"></p><p>进入刚刚抓取的数据，右上角有搜索</p><p><img src="'+Wt+'" alt="" loading="lazy"></p><p>搜索的信息如图</p><p><img src="'+$t+'" alt="" loading="lazy"></p><p>返回数据页，了解一下信息</p><p><img src="'+Yt+'" alt="" loading="lazy"></p><p>那我们演示一下如何抓包屏蔽广告吧</p><p>在AppStore下载 <a href="https://apps.apple.com/cn/app/id1498018958" target="_blank" rel="noreferrer">ZK助手</a> 并安装</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>练手尽量挑简单的APP，相对好找</p><p>熟练了再干大厂的，阿里系腾讯系的都稍微复杂些</p></div><p><img src="'+Zt+'" alt="" loading="lazy"></p><p>广告有2种，开屏广告和弹窗广告，那就动手吧</p><p><img src="'+ta+'" alt="" loading="lazy"></p><p>主界面长按风车，也可以快捷的开启抓包</p><p><img src="'+aa+'" alt="" loading="lazy"></p><p>然后打开APP等它弹完广告后，关闭抓包，查看数据</p><p><img src="'+ia+'" alt="" loading="lazy"></p><p>分析下我的开屏广告，一个视频+下方APP推送广告</p><p>我直接搜最下的文字说明 <code>惊喜价格</code></p><p><img src="'+sa+'" alt="" loading="lazy"></p><p>搜出几个结果，我们先看第一个数据，下拉到底部响应体 <code>JSON查看</code></p><p><img src="'+la+'" alt="" loading="lazy"></p><p>找到了一模一样的文字，那就是这个了</p><p><img src="'+pa+'" alt="" loading="lazy"></p><p>返回数据顶部，复制请求地址，要包含posid</p><p>然后用 <a href="https://www.icloud.com/shortcuts/ca8bb02b30d144b3996c84211372a011" target="_blank" rel="noreferrer">QX生成正则 丨 快捷指令</a> 来正则匹配转换</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>如果是其他APP，只要文字对得上，地址复制到哪就挨个试</p><p>比如：<a href="https://mi.gdt.qq.com/gdt_mview.fcg%5C?posid=3003491097068881" target="_blank" rel="noreferrer">https://mi.gdt.qq.com/gdt_mview.fcg\\?posid=3003491097068881</a></p></div><p><img src="'+na+'" alt="" loading="lazy"></p><p>转换完成后，自动复制到剪切板</p><p><img src="'+ea+`" alt="" loading="lazy"></p><p>我们粘贴到重写规则中</p><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li><p>类型：<code>reject-200</code> (我是根据抓取的响应码改的，只要是reject就行)</p></li><li><p>匹配的URL：<code>^https:\\/\\/mi\\.gdt\\.qq\\.com\\/gdt_mview\\.fcg\\?posid=3003491097068881</code></p></li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 快捷指令生成的，自己单独拷贝一下</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">^https:\\/\\/mi\\.gdt\\.qq\\.com\\/gdt_mview\\.fcg\\?posid</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=3003491097068881</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reject-dict</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hostname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mi.gdt.qq.com</span></span></code></pre></div></div><p><img src="`+ra+'" alt="" loading="lazy"></p><p>在MitM添加hostname，<code>mi.gdt.qq.com</code></p><p><img src="'+oa+'" alt="" loading="lazy"></p><p>然后我们再来搞定弹窗广告，搜索 <code>查看详情</code></p><p><img src="'+ua+'" alt="" loading="lazy"></p><p>搜索到一个结果后，看到了一模一样的文字，那就是它了</p><p><img src="'+ca+'" alt="" loading="lazy"></p><p>拷贝地址链接，生成正则</p><p><img src="'+ha+`" alt="" loading="lazy"></p><p>我们粘贴到重写规则中，hostname已经有了，就不加了</p><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li><p>类型：<code>reject-200</code> (我是根据抓取的响应码改的，只要是reject就行)</p></li><li><p>匹配的URL：<code>^https:\\/\\/mi\\.gdt\\.qq\\.com\\/gdt_mview\\.fcg\\?posid=2073246517409853</code></p></li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 快捷指令生成的，自己单独拷贝一下</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">^https:\\/\\/mi\\.gdt\\.qq\\.com\\/gdt_mview\\.fcg\\?posid</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=2073246517409853</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reject-dict</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hostname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mi.gdt.qq.com</span></span></code></pre></div></div><p><img src="`+ma+'" alt="" loading="lazy"></p><p>最后看一下效果吧，清爽很多</p><p><img src="'+da+'" alt="" loading="lazy"></p><hr><h3 id="http-backend" tabindex="-1">HTTP Backend <a class="header-anchor" href="#http-backend" aria-label="Permalink to &quot;HTTP Backend&quot;">​</a></h3><p>对应配置文件中的 <a href="#编辑">[htp_backend]</a> 模块</p><p>搭建一个本地服务器，以前是用于搭建Boxjs，但现在Boxjs改成重写了</p><p>现在基本也用不到了</p><p><img src="'+ga+'" alt="" loading="lazy"></p><h2 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h2><p>来来回回接触好几次了，估计也能猜到啥用处了</p><hr><h3 id="配置片段" tabindex="-1">配置片段 <a class="header-anchor" href="#配置片段" aria-label="Permalink to &quot;配置片段&quot;">​</a></h3><p>常见于节点、分流和重写</p><p>实际是以远程订阅的方式，来管理本地的节点和规则</p><p><img src="'+ka+'" alt="" loading="lazy"></p><hr><h3 id="编辑" tabindex="-1">编辑 <a class="header-anchor" href="#编辑" aria-label="Permalink to &quot;编辑&quot;">​</a></h3><p>在圈X上添加的所有文件都在这里，一一对应，可添加并修改</p><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li><p>general：常规设置 (如：资源解析器)</p></li><li><p>dns：域名系统</p></li><li><p>policy：策略组</p></li></ul><hr><ul><li><p>server_local：本地节点</p></li><li><p>server_remote：远程节点</p></li><li><p>filter_local：本地分流</p></li><li><p>filter_remote：远程分流</p></li><li><p>rewrite_local：本地重写</p></li><li><p>rewrite_remote：远程重写</p></li></ul><hr><ul><li><p>task_local：本地任务</p></li><li><p>HTTP Backend：HTTP后端</p></li><li><p>MitM：解密模块(hostname，主机名)</p></li></ul></div><p><img src="'+ba+'" alt="" loading="lazy"></p><hr><h3 id="导出配置" tabindex="-1">导出配置 <a class="header-anchor" href="#导出配置" aria-label="Permalink to &quot;导出配置&quot;">​</a></h3><p>可以将自己的所有配置导出</p><p><img src="'+_a+'" alt="" loading="lazy"></p><hr><h3 id="导入配置" tabindex="-1">导入配置 <a class="header-anchor" href="#导入配置" aria-label="Permalink to &quot;导入配置&quot;">​</a></h3><p>可以将已经导出的配置导入，或者别人分享的配置导入</p><p><img src="'+qa+'" alt="" loading="lazy"></p><hr><h3 id="下载配置" tabindex="-1">下载配置 <a class="header-anchor" href="#下载配置" aria-label="Permalink to &quot;下载配置&quot;">​</a></h3><p>比较适合不愿意花时间了解圈X的人，直接下载别人的配置文件使用</p><div class="danger custom-block"><p class="custom-block-title">特别注意</p><p>下载任何配置会清空圈X的所有设置，请提前备份！！</p><ul><li><p>备份节点：方便导入后更新、使用</p></li><li><p>备份MitM的 <code>passphrase</code> 和 <code>p12</code>：否则你需要重新安装证书</p></li></ul><p><img src="'+ya+'" alt="" loading="lazy"></p></div><p><img src="'+Xa+'" alt="" loading="lazy"></p><ul><li><p><a href="https://github.com/blackmatrix7/" target="_blank" rel="noreferrer">@blackmatrix7</a>：<a href="https://github.com/blackmatrix7/ios_rule_script" target="_blank" rel="noreferrer">blackmatrix7配置</a> 「推荐」</p></li><li><p><a href="https://github.com/ddgksf2013/Profile/" target="_blank" rel="noreferrer">@墨鱼</a>：<a href="https://raw.githubusercontent.com/ddgksf2013/Profile/master/QuantumultX.conf" target="_blank" rel="noreferrer">墨鱼配置</a> 「推荐」</p></li><li><p><a href="https://github.com/Orz-3/QuantumultX" target="_blank" rel="noreferrer">@Orz-3</a>：<a href="https://raw.githubusercontent.com/Orz-3/QuantumultX/master/Orz-3.conf" target="_blank" rel="noreferrer">小白配置</a></p></li><li><p><a href="https://github.com/KOP-XIAO/QuantumultX/" target="_blank" rel="noreferrer">@KOP-XIAO</a>：<a href="https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/QuantumultX_Profiles.conf" target="_blank" rel="noreferrer">Shawn配置</a></p></li><li><p><a href="https://github.com/limbopro/Profiles4limbo/" target="_blank" rel="noreferrer">@limbopro</a>：<a href="https://raw.githubusercontent.com/limbopro/Profiles4limbo/main/full.conf" target="_blank" rel="noreferrer">毒奶配置</a></p></li><li><p><a href="https://github.com/fmz200/wool_scripts/" target="_blank" rel="noreferrer">@fmz200</a>：<a href="https://raw.githubusercontent.com/fmz200/wool_scripts/main/QuantumultX/config/lanren.conf" target="_blank" rel="noreferrer">张军配置</a></p></li><li><p><a href="https://github.com/erdongchanyo/Rules/" target="_blank" rel="noreferrer">@耳东橙</a>：<a href="https://raw.githubusercontent.com/erdongchanyo/Rules/main/Quantumult%20X/LazyConf/QuantumultX_EDC-Lazy.conf" target="_blank" rel="noreferrer">耳东橙配置</a></p></li><li><p><a href="https://github.com/zwf234/rules/" target="_blank" rel="noreferrer">@奇心配置</a>：<a href="https://qxnav.com/rules/QuantumultX/qixin.conf" target="_blank" rel="noreferrer">奇心配置</a></p></li><li><p><a href="https://github.com/Sonmbs/quantumult_X/" target="_blank" rel="noreferrer">@Sonmbs</a>：<a href="https://raw.githubusercontent.com/Sonmbs/quantumult_X/main/coconut.conf" target="_blank" rel="noreferrer">懒人配置</a> 「停更」</p></li><li><p><a href="https://github.com/w37fhy/QuantumultX" target="_blank" rel="noreferrer">@w37fhy</a>：<a href="https://raw.githubusercontent.com/w37fhy/QuantumultX/master/QuantumultX_diy.conf" target="_blank" rel="noreferrer">懒人配置DIY版</a> 「停更」</p></li><li><p><a href="https://github.com/DivineEngine/Profiles/" target="_blank" rel="noreferrer">@DivineEngine</a>：<a href="https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Outbound.conf" target="_blank" rel="noreferrer">DivineEngine配置</a> 「停更」</p></li><li><p><a href="https://github.com/Tartarus2014/QuantumultX-Script/" target="_blank" rel="noreferrer">@Tartarus2014</a>：<a href="https://raw.githubusercontent.com/Tartarus2014/QuantumultX-Script/main/QuanX.conf" target="_blank" rel="noreferrer">Tartarus2014配置</a> 「停更」</p></li></ul><hr><h3 id="示例配置" tabindex="-1">示例配置 <a class="header-anchor" href="#示例配置" aria-label="Permalink to &quot;示例配置&quot;">​</a></h3><p>官方的示例，不懂使用可以在里面查看</p><p><img src="'+fa+'" alt="" loading="lazy"></p><hr><h3 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-label="Permalink to &quot;初始化&quot;">​</a></h3><div class="danger custom-block"><p class="custom-block-title">注意</p><p>会清空所有配置！且不可恢复！</p><p>如无必要！请谨慎使用！</p></div><p><img src="'+Fa+'" alt="" loading="lazy"></p><h2 id="面板-工具栏" tabindex="-1">面板&amp;工具栏 <a class="header-anchor" href="#面板-工具栏" aria-label="Permalink to &quot;面板&amp;工具栏&quot;">​</a></h2><p>可以对首页的功能进行排序和样式的改变</p><p><img src="'+va+'" alt="" loading="lazy"></p><p>底部的工具栏，可以改变功能</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>工具1和工具5，不可以改变！</p></div><p><img src="'+Ea+'" alt="" loading="lazy"></p><h2 id="其他设置" tabindex="-1">其他设置 <a class="header-anchor" href="#其他设置" aria-label="Permalink to &quot;其他设置&quot;">​</a></h2><p>可以改变模式，建议分流；出站接口，默认使用WIFI，无WIFI后使用蜂窝</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>资源默认保存在 <code>icloud云盘</code> ，关闭即保存在 <code>我的iPhone</code></p></div><p><img src="'+za+'" alt="" loading="lazy"></p><p>通知、VPN和GeoLite2皆保持默认即可，有需要再开启</p><details class="details custom-block"><summary>关于 HTTP 和 SOCKS5 代理的使用</summary><p>即开启节点分享，仅限同局域网下</p><ul><li><p>圈X连接代理，手机设置开启<code>个人热点</code></p></li><li><p>圈X打开 <code>HTTP代理开关</code></p></li><li><p>其他手机连接热点，点击wifi旁边的 <code>i</code></p></li><li><p>下拉到底 <code>HTTP代理</code> 改成手动，输入服务器ip和端口</p></li></ul></details><p><img src="'+Ca+'" alt="" loading="lazy"></p><h2 id="界面补充" tabindex="-1">界面补充 <a class="header-anchor" href="#界面补充" aria-label="Permalink to &quot;界面补充&quot;">​</a></h2><p>网络活动中，可以查看已经重写的链接状态</p><p><img src="'+Ba+'" alt="" loading="lazy"></p><p>以及正常的网络连接状态，长按即进入抓包页面</p><p><img src="'+Pa+'" alt="" loading="lazy"></p><p>日志页是当天的日志，长按可查看近期</p><p><img src="'+Da+'" alt="" loading="lazy"></p><h2 id="相关脚本" tabindex="-1">相关脚本 <a class="header-anchor" href="#相关脚本" aria-label="Permalink to &quot;相关脚本&quot;">​</a></h2><ul><li><p><a href="https://github.com/KOP-XIAO/QuantumultX" target="_blank" rel="noreferrer">@KOP-XIAO：资源解析器</a> 丨 <a href="https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/UI-Action.json" target="_blank" rel="noreferrer">查看流媒体解锁</a></p></li><li><p><a href="https://github.com/blackmatrix7/ios_rule_script" target="_blank" rel="noreferrer">@blackmatrix7：分流规则</a></p></li><li><p><a href="https://github.com/Orz-3/mini" target="_blank" rel="noreferrer">@Orz-3：图标</a></p></li><li><p><a href="https://github.com/Koolson/Qure" target="_blank" rel="noreferrer">@Koolson：图标</a></p></li><li><p><a href="https://limbopro.com/" target="_blank" rel="noreferrer">@limbopro：毒奶</a></p></li><li><p><a href="https://github.com/NobyDa" target="_blank" rel="noreferrer">@NobyDa：野比大佬</a></p></li><li><p><a href="https://qx.atlucky.me/zheng-ze-jian-jie" target="_blank" rel="noreferrer">@lucky：正则简介</a></p></li></ul>',180))])}const Qa=p(xa,[["render",wa]]);export{Ha as __pageData,Qa as default};
