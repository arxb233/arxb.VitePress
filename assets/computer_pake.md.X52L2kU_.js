import{_ as t,c as o,j as p,a as r,G as l,a4 as s,o as i,C as n}from"./chunks/framework.DBf_wRcB.js";const c="/pake/pake-01.png",d="/pake/pake-02.png",k="/pake/pake-03.png",m="/pake/pake-04.png",g="/pake/pake-05.png",h="/pake/pake-06.png",u="/pake/pake-07.png",_="/pake/pake-08.png",b="/pake/pake-09.png",f="/pake/pake-10.png",w="/pake/pake-11.png",z="/pake/pake-12.png",P="/pake/pake-13.png",x="/pake/pake-14.png",y="/pake/pake-15.png",V=JSON.parse('{"title":"Pake将网页打包成应用程序","description":"","frontmatter":{},"headers":[],"relativePath":"computer/pake.md","filePath":"computer/pake.md","lastUpdated":null}'),v={name:"computer/pake.md"};function q(A,a,N,C,M,L){const e=n("ArticleMetadata");return i(),o("div",null,[a[0]||(a[0]=p("h1",{id:"pake将网页打包成应用程序",tabindex:"-1"},[r("Pake将网页打包成应用程序 "),p("a",{class:"header-anchor",href:"#pake将网页打包成应用程序","aria-label":'Permalink to "Pake将网页打包成应用程序"'},"​")],-1)),l(e),a[1]||(a[1]=s('<h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>​Pake是一个将网页打包成桌面客户端的程序，它支持 Mac / Windows / Linux三个系统</p><p>使用的是 <a href="https://www.rust-lang.org/zh-CN/" target="_blank" rel="noreferrer">Rust</a> 框架的 <a href="https://tauri.app/zh-cn/" target="_blank" rel="noreferrer">Tauri</a>，相比 <a href="https://www.electronjs.org/zh/" target="_blank" rel="noreferrer">Electron</a> 要更轻快体积更小</p><p><img src="'+c+'" alt="" loading="lazy"></p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>下图演示：用微信读书网页版打包的程序</p></div><p><img src="'+d+'" alt="" loading="lazy"></p><h2 id="fork项目" tabindex="-1">Fork项目 <a class="header-anchor" href="#fork项目" aria-label="Permalink to &quot;Fork项目&quot;">​</a></h2><p>准备一个 <a href="./../website/pages/github.html">GitHub账号</a> ，进入仓库fork复刻项目</p><p>项目仓库：<a href="https://github.com/tw93/Pake" target="_blank" rel="noreferrer">https://github.com/tw93/Pake</a></p><p><img src="'+k+'" alt="" loading="lazy"></p><p>仓库名不用改，直接创建</p><p><img src="'+m+'" alt="" loading="lazy"></p><p>这样我们就fork好了</p><p><img src="'+g+'" alt="" loading="lazy"></p><h2 id="打包项目" tabindex="-1">打包项目 <a class="header-anchor" href="#打包项目" aria-label="Permalink to &quot;打包项目&quot;">​</a></h2><p>这里我们用GitHub Action，点击 <code>Action</code> ，再点同意条款声明</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>其实也可以下载到本地开发，但是没必要占用自己电脑的资源，Action不香吗</p></div><p><img src="'+h+'" alt="" loading="lazy"></p><p>选择 <code>Build App with Pake CLI</code> ，右侧信息除必填项，其他默认，最后运行Run</p><div class="warning custom-block"><p class="custom-block-title">信息填写</p><p>platform：根据安装的电脑系统选择，windows-latest表示windows系统安装</p><p>URL：填入打包的网页网址，不需要带 <code>https://</code></p><p>NAME：名字可以自己随便写</p><p>ICON：图标需要使用链接，留空就会使用pake的默认图标</p></div><p><img src="'+u+'" alt="" loading="lazy"></p><p>等一会就跑起来了，这个过程会有点久</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>我是用 <a href="https://www.xiaohongshu.com/" target="_blank" rel="noreferrer">小红书</a> 演示的，也用了15分钟左右</p><p><code>www.xiaohongshu.com</code></p></div><p><img src="'+_+'" alt="" loading="lazy"></p><p><img src="'+b+'" alt="" loading="lazy"></p><p>点进去，就能到到打包好的附件了，才不到4M，点击压缩包即可下载</p><p><img src="'+f+'" alt="" loading="lazy"></p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>下载后解压，我们直接安装</p><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li><p>dmg格式：MAC安装包</p></li><li><p>msi格式：Windows安装包</p></li><li><p>AppImage格式：Linux安装包</p></li><li><p>deb格式：Debian安装包(Debian是一个Linux发行版)</p></li></ul></div><p><img src="'+w+'" alt="" loading="lazy"></p><p>安装过程没啥好说的，就简单看一下吧</p><p><img src="'+z+'" alt="" loading="lazy"></p><p><img src="'+P+'" alt="" loading="lazy"></p><p><img src="'+x+'" alt="" loading="lazy"></p><p>最后打开就可以了，界面很舒服</p><p><img src="'+y+'" alt="" loading="lazy"></p><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><p>作者在 <a href="https://github.com/tw93/Pake/releases" target="_blank" rel="noreferrer">releases</a> 上传了一些已经打包的程序</p><p>如果有自己想要的就直接下，没有的就自己动手</p>',40))])}const $=t(v,[["render",q]]);export{V as __pageData,$ as default};
